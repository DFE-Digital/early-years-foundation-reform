name: 'HfEYP App Deploy [Azure - STAGE]'

on:
  workflow_dispatch:
    inputs:
      candidate:
        description: 'Create release candidate version ("rcx.x.x")'
        type: string
        required: true 
      ref:
        description: 'Git ref or branch to deploy'
        type: string
        required: true
        default: main
    push:
      tags:
        - rc*

# Permissions for OIDC authentication
permissions:
  id-token: write
  contents: write
  packages: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  DOCKER_IMAGE: ghcr.io/dfe-digital/help-for-early-years-providers

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref_name }}

      # Tag the branch with the release candidate version
      - name: Tag candidate
        if: ${{ inputs.candidate }}
        run: |
          git tag --force ${{ inputs.candidate }}
          git push --force origin refs/tags/${{ inputs.candidate }}
          echo "HEAD=$(git rev-parse ${{ inputs.candidate }})" >> $GITHUB_ENV

      # Create and boot Docker image builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.9.1

      # Login to Github Container Registry 
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

     # Build and push image
     - name: Build and push Docker Image
       uses: docker/build-push-action@v5
       with:
        target: production
        context: .
        file: Dockerfile.azure
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          SHA=${{ github.sha }}
        cache-from: |
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          ${{ env.DOCKER_IMAGE }}:${{ inputs.ref || github.ref_name }}
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          ${{ env.DOCKER_IMAGE }}:${{ inputs.candidate || github.ref_name }}

      # Login to Azure using OIDC
      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Deploy Web Application
      - name: Deploy to Azure App Services
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.WEBAPP_NAME }}
          images: ${{ env.DOCKER_IMAGE }}:${{ inputs.candidate || github.ref_name }}

