name: Create Review App
on:
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize, reopened ]
    paths-ignore:
      - 'documentation/**'

jobs:
  deploy:
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: ghcr.io/dfe-digital/help-for-early-years-provider-review
    outputs:
      IMAGE_TAG: ${{ env.IMAGE_TAG }}
    steps:
      - uses: softprops/turnstyle@v1
        name: Check workflow concurrency
        with:
          poll-interval-seconds: 20
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: setup-inputs
        run: |
          echo "ENVIRONMENT=review-pr-${{ github.event.number }}-cms" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        name: Checkout Code
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image from builder target
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:builder
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:builder
          target: builder

      - name: Build and push docker image from early-careers-framework-gems-node-modules target
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:gems-node-modules
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:gems-node-modules
          target: help-for-early-years-providers-gems-node-modules

      - name: Build and push docker image from assets-precompile target
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:assets-precompile
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}:assets-precompile
          target: assets-precompile

      - name: Build and push docker image from production target
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            SHA=${{ github.event.pull_request.head.sha }}
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:${{ env.ENVIRONMENT }}
            ${{ env.DOCKER_IMAGE }}:latest
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.event.pull_request.head.sha }}
            ${{ env.DOCKER_IMAGE }}:${{ env.ENVIRONMENT }}
            ${{ env.DOCKER_IMAGE }}:latest
          target: production

      - name: Deploy review app to dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_PASSWORD }}
          TF_VAR_statuscake_username: ${{ secrets.STATUSCAKE_USERNAME }}
          TF_VAR_statuscake_apikey: ${{ secrets.STATUSCAKE_APIKEY }}
        run: |
          echo "ENV:"
          echo ${{env}}
          export TF_VAR_paas_app_docker_image=${{ env.DOCKER_IMAGE }}:${{ github.event.pull_request.head.sha }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=${{ secrets.AWS_BUCKET }}" -backend-config="key=${{ env.ENVIRONMENT }}/terraform.tfstate"
          terraform plan -var-file ../workspace-variables/review.tfvars
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/review.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_DEV}}", "AWS_ACCESS_KEY_ID": "${{secrets.AWS_ACCESS_KEY_ID_SANDBOX}}", "AWS_SECRET_ACCESS_KEY": "${{secrets.AWS_SECRET_ACCESS_KEY_SANDBOX}}", "AWS_REGION": "${{secrets.AWS_REGION_SANDBOX}}", "AWS_BUCKET": "${{secrets.AWS_BUCKET_SANDBOX}}", "BASIC_AUTH_USER": "${{secrets.BASIC_AUTH_USER}}", "BASIC_AUTH_PASSWORD": "${{secrets.BASIC_AUTH_PASSWORD}}", "GOOGLE_ANALYTICS_CONTAINER_ID": "${{ secrets.GA_CONTAINER_ID_SANDBOX }}", "GOOGLE_ANALYTICS_TRACKING_ID": "${{ secrets.GA_TRACKING_ID_SANDBOX }}"}' -var='environment=${{env.ENVIRONMENT}}'

      - name: comment on PR
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Created review app at https://eyfs-review-pr-${{ github.event.number }}-cms.london.cloudapps.digital"
          check_for_duplicate_msg: true