name: Deploy monitoring stack to Sandbox

on:
  workflow_dispatch:

jobs:
  turnstyle:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - name: Check workflow concurrency
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 20
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: deploy monitoring stack
    needs: turnstyle
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.0

      - name: Deploy to sandbox
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_PASSWORD }}
          TF_VAR_google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
          TF_VAR_google_client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          TF_VAR_grafana_admin_password: ${{ secrets.GRAFANA_ADMIN_PASSWORD_SANDBOX }}
          TF_VAR_alert_manager_slack_url: ${{ secrets.ALERTMANAGER_SLACK_URL }}
        run: |
          cd terraform/monitoring
          terraform init -reconfigure -input=false -backend-config="bucket=${{AWS_BUCKET_SANDBOX}}"
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/monitoring/sandbox.tfvars
