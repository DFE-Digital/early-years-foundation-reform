name: Build and Deploy Sandbox

on:
  push:
    branches:
      - develop
    paths-ignore:
      - 'documentation/**'

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: ghcr.io/dfe-digital/help-for-early-years-providers
    outputs:
      IMAGE_TAG: ${{ env.IMAGE_TAG }}
    steps:
      - name: Check workflow concurrency
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 20
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image from builder target
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:builder
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}:builder
          target: builder

      - name: Build and push docker image from help-for-early-years-providers-gems-node-modules target
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:gems-node-modules
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}:gems-node-modules
          target: help-for-early-years-providers-gems-node-modules

      - name: Build and push docker image from assets-precompile target
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}:assets-precompile
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}:assets-precompile
          target: assets-precompile

      - name: Set docker image tag (push)
        run: |
          GIT_BRANCH=${GITHUB_REF##*/}
          echo "BRANCH_TAG=$GIT_BRANCH" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push docker image from production target
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            VERSION=${{ env.IMAGE_TAG }}
            SHA=${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ env.DOCKER_IMAGE }}:latest
            type=registry,ref=${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
            type=registry,ref=${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_TAG }}
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
            ${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_TAG }}
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          target: production

      - name: Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Deploy to sandbox 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_PASSWORD }}
          TF_VAR_statuscake_username: ${{ secrets.STATUSCAKE_USERNAME }}
          TF_VAR_statuscake_apikey: ${{ secrets.STATUSCAKE_APIKEY }}
        run: |
          echo "ENV:"
          echo ${{env}}
          export TF_VAR_paas_app_docker_image=${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=${{secrets.AWS_BUCKET_SANDBOX}}"
          terraform plan -var-file ../workspace-variables/sandbox.tfvars
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/sandbox.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_DEV}}", "AWS_ACCESS_KEY_ID": "${{secrets.AWS_ACCESS_KEY_ID_SANDBOX}}", "AWS_SECRET_ACCESS_KEY": "${{secrets.AWS_SECRET_ACCESS_KEY_SANDBOX}}", "AWS_REGION": "${{secrets.AWS_REGION_SANDBOX}}", "AWS_BUCKET": "${{secrets.AWS_BUCKET_SANDBOX}}", "BASIC_AUTH_USER": "${{secrets.BASIC_AUTH_USER}}", "BASIC_AUTH_PASSWORD": "${{secrets.BASIC_AUTH_PASSWORD}}", "GOOGLE_ANALYTICS_CONTAINER_ID": "${{ secrets.GA_CONTAINER_ID_SANDBOX }}", "GOOGLE_ANALYTICS_TRACKING_ID": "${{ secrets.GA_TRACKING_ID_SANDBOX }}"}'
