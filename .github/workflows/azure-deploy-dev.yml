name: 'HfEYP App Deploy [Azure - DEV]'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - .docker*
      - .env.example
      - .gitignore
      - .tool-versions
      - .yardopts
      - bin/*
      - docker-compose.*
      - terraform/**
      - terraform-azure/**

# Permissions for OIDC authentication
permissions:
  id-token: write
  contents: write
  packages: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  DOCKER_IMAGE: ghcr.io/dfe-digital/help-for-early-years-providers
  RELEASE_VERSION: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Check workflow concurrency
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 20
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Checkout the repository to the GitHub Actions runner

      - name: Checkout Code
        uses: actions/checkout@v4

      # Create and boot Docker image builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.9.1

      # Login to the container registry
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image from builder target
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.azure
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}-dev:builder
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}-dev:builder
          target: builder

      - name: Build and push docker image from help-for-early-years-providers-gems-node-modules target
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.azure
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}-dev:gems-node-modules
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}-dev:gems-node-modules
          target: help-for-early-years-providers-gems-node-modules

      - name: Build and push docker image from assets-precompile target
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.azure
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKER_IMAGE }}-dev:assets-precompile
          push: true 
          tags: ${{ env.DOCKER_IMAGE }}-dev:assets-precompile
          target: assets-precompile

      - name: Build and push docker image from production target
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.azure
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            SHA=${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ env.DOCKER_IMAGE }}:latest
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          target: production

      # Login to Azure using OIDC
      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Deploy Web Application
      - name: Deploy to Azure App Services
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.WEBAPP_NAME }}
          images: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}